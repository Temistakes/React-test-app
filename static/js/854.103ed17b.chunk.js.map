{"version":3,"file":"static/js/854.103ed17b.chunk.js","mappings":"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","sources":["webpack://app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsLink/DialogsLink.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__kwshW\",\"dialogs__items\":\"Dialogs_dialogs__items__OpXDj\",\"dialogs__list\":\"Dialogs_dialogs__list__3DgNN\",\"dialogs__list-item\":\"Dialogs_dialogs__list-item__l4p+M\",\"dialogs__list-item-img\":\"Dialogs_dialogs__list-item-img__ss62e\",\"dialog\":\"Dialogs_dialog__ts3qe\",\"dialog__messages\":\"Dialogs_dialog__messages__lh2wI\",\"message\":\"Dialogs_message__zglyt\",\"message_me\":\"Dialogs_message_me__7wJc+\",\"message__text\":\"Dialogs_message__text__T8L+g\",\"dialog__form\":\"Dialogs_dialog__form__kwego\",\"dialog__input\":\"Dialogs_dialog__input__TyDHN\",\"dialog__send-btn\":\"Dialogs_dialog__send-btn__LLxoz\"};","import React from \"react\";\r\nimport cl from \"../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction DialogsLink({ url, id, name }) {\r\n    return (\r\n        <li className={cl[\"dialogs__list-item\"]}>\r\n            <img src={url} class={cl[\"dialogs__list-item-img\"]} alt=\"\" />\r\n            <NavLink to={`/dialogs/${id}/`}>{name}</NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default DialogsLink;\r\n","import React from \"react\";\r\nimport cl from \"../Dialogs.module.css\";\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div\r\n            className={`${cl[\"message\"]} ${props.isMe ? cl[\"message_me\"] : \"\"}`}\r\n        >\r\n            <p className={cl[\"message__text\"]}>{props.text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport cl from \"./Dialogs.module.css\";\r\nimport DialogsLink from \"./DialogsLink/DialogsLink\";\r\nimport Message from \"./Message/Message\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction DialogsForm({ addMessage, ...props }) {\r\n    let validationSchema = yup.object().shape({\r\n        message: yup.string().required(\"Данное поле обязательно\"),\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                message: \"\",\r\n            }}\r\n            onSubmit={values => {\r\n                addMessage(values.message);\r\n            }}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ errors, touched, values }) => (\r\n                <Form className={cl[\"dialog__form\"]}>\r\n                    <Field\r\n                        type=\"text\"\r\n                        className={cl[\"dialog__input\"]}\r\n                        placeholder=\"Message\"\r\n                        value={values.message}\r\n                        name=\"message\"\r\n                    />\r\n                    {errors.message && touched.message ? (\r\n                        <p className={cl.error}>{errors.message}</p>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    <button type=\"submit\" className={cl[\"dialog__send-btn\"]}>\r\n                        Отправить\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nfunction Dialogs({ dialogs, messages, addMessage, ...props }) {\r\n    let dialogsElements = dialogs.map(dialog => (\r\n        <DialogsLink\r\n            key={dialog.id}\r\n            id={dialog.id}\r\n            name={dialog.name}\r\n            url={dialog.url}\r\n        />\r\n    ));\r\n\r\n    let messagesElements = messages.map(message => (\r\n        <Message key={message.id} text={message.text} isMe={message.isMe} />\r\n    ));\r\n\r\n    // UI\r\n\r\n    return (\r\n        <section className={cl[\"dialogs\"]}>\r\n            <div className={cl[\"dialogs__items\"]}>\r\n                <ul className={cl[\"dialogs__list\"]}>{dialogsElements}</ul>\r\n            </div>\r\n\r\n            <div className={cl[\"dialog\"]}>\r\n                <div className={cl[\"dialog__messages\"]}>{messagesElements}</div>\r\n\r\n                <DialogsForm addMessage={addMessage} />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import { addMessage } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        input: state.dialogsPage.input,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addMessage,\r\n    }),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = Component => {\r\n    const ContainerComponent = props => {\r\n        if (!props.isAuth) return <Navigate to=\"/login/\" />;\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    return connect(mapStateToProps)(ContainerComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n"],"names":["_ref","url","id","name","_jsxs","className","cl","children","_jsx","src","class","alt","NavLink","to","concat","props","isMe","text","DialogsForm","addMessage","validationSchema","_objectWithoutProperties","_excluded","yup","shape","message","required","Formik","initialValues","onSubmit","values","_ref2","errors","touched","Form","Field","type","placeholder","value","error","_ref3","dialogs","messages","dialogsElements","_excluded2","map","dialog","DialogsLink","messagesElements","Message","compose","connect","state","dialogsPage","input","withAuthRedirect","Dialogs","mapStateToProps","isAuth","auth","Component","_objectSpread","Navigate"],"sourceRoot":""}