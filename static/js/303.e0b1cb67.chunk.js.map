{"version":3,"file":"static/js/303.e0b1cb67.chunk.js","mappings":"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","sources":["webpack://app/./src/components/Profile/Profile.module.css?b512","webpack://app/./src/components/Profile/ProfileBanner/ProfileBanner.module.css?d323","components/Profile/ProfileBanner/ProfileBanner.jsx","webpack://app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://app/./src/components/Profile/Posts/Posts.module.css?138f","webpack://app/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","redux/profileSelectors.js","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__RPaT-\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile__banner-img\":\"ProfileBanner_profile__banner-img__bgya0\"};","import React from \"react\";\r\nimport cl from \"./ProfileBanner.module.css\";\r\n\r\n// class ProfileBanner extends React.PureComponent {\r\n//     render() {\r\n//         console.log(\"RENDER\");\r\n//         return (\r\n//             <div className={cl[\"profile__banner\"]}>\r\n//                 <img\r\n//                     src={this.props.img}\r\n//                     alt=\"\"\r\n//                     className={cl[\"profile__banner-img\"]}\r\n//                 />\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nconst ProfileBanner = React.memo(({ img, ...props }) => {\r\n    return (\r\n        <div className={cl[\"profile__banner\"]}>\r\n            <img src={img} alt=\"\" className={cl[\"profile__banner-img\"]} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ProfileBanner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile__user-row\":\"ProfileInfo_profile__user-row__Q5Uyf\",\"profile__user-img\":\"ProfileInfo_profile__user-img__cxfpO\",\"profile__name\":\"ProfileInfo_profile__name__ADbYn\",\"profile__desc\":\"ProfileInfo_profile__desc__wlHsR\"};","import React, { useEffect, useState } from \"react\";\r\nimport cl from \"../Profile.module.css\";\r\n\r\nconst ProfileStatus = props => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [input, setInput] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setInput(props.status);\r\n    }, [props.status]);\r\n\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(input);\r\n    };\r\n\r\n    const onInput = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={cl.profile__status}>\r\n            {editMode ? (\r\n                <input\r\n                    type=\"text\"\r\n                    onBlur={offEditMode}\r\n                    autoFocus={true}\r\n                    value={input}\r\n                    onChange={onInput}\r\n                />\r\n            ) : (\r\n                <span onDoubleClick={onEditMode}>\r\n                    {props.status ? props.status : \"---------------------\"}\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// class ProfileStatus extends React.Component {\r\n//     state = {\r\n//         editMode: false,\r\n//         input: this.props.status,\r\n//     };\r\n\r\n//     onEditMode = () => {\r\n//         this.setState({\r\n//             editMode: true,\r\n//         });\r\n//     };\r\n\r\n//     offEditMode = () => {\r\n//         this.setState({\r\n//             editMode: false,\r\n//         });\r\n\r\n//         this.props.updateStatus(this.state.input);\r\n//     };\r\n\r\n//     onInput = e => {\r\n//         this.setState({\r\n//             input: e.target.value,\r\n//         });\r\n//     };\r\n\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 input: this.props.status,\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className={cl.profile__status}>\r\n//                 {this.state.editMode ? (\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         onBlur={this.offEditMode}\r\n//                         autoFocus={true}\r\n//                         value={this.state.input}\r\n//                         onChange={this.onInput}\r\n//                     />\r\n//                 ) : (\r\n//                     <span onDoubleClick={this.onEditMode}>\r\n//                         {this.props.status\r\n//                             ? this.props.status\r\n//                             : \"---------------------\"}\r\n//                     </span>\r\n//                 )}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport cl from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nfunction ProfileInfo({ name, descr, updateStatus, status, img, ...props }) {\r\n    return (\r\n        <div className={cl[\"profile__user-row\"]}>\r\n            <img src={img} alt=\"\" className={cl[\"profile__user-img\"]} />\r\n\r\n            <div className={cl[\"profile__user-info\"]}>\r\n                <h1 className={cl[\"profile__name\"]}>{name}</h1>\r\n                <p className={cl[\"profile__desc\"]}>{descr}</p>\r\n                <ProfileStatus updateStatus={updateStatus} status={status} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts__form\":\"Posts_posts__form__kVSgd\",\"posts__header\":\"Posts_posts__header__pKpL-\",\"posts__title\":\"Posts_posts__title__1FITz\",\"posts__items\":\"Posts_posts__items__irahp\",\"posts__send-input\":\"Posts_posts__send-input__lRtkJ\",\"posts__send-btn\":\"Posts_posts__send-btn__ZBKOx\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__gDjBn\",\"post__img\":\"Post_post__img__Trc2F\",\"post__like\":\"Post_post__like__vGwlt\"};","import React from \"react\";\r\nimport cl from \"./Post.module.css\";\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <article className={cl[\"post\"]}>\r\n            <img\r\n                src=\"https://png.pngtree.com/thumb_back/fw800/background/20240321/pngtree-sunset-kisses-the-mountains-painting-sky-image_15656527.jpg\"\r\n                alt=\"\"\r\n                className={cl[\"post__img\"]}\r\n            />\r\n            <p className={cl[\"post__text\"]}>\r\n                {props.message} | Количество лайков: {props.likecount}\r\n            </p>\r\n            <button className={cl[\"post__like\"]}>Like</button>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport cl from \"./Posts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n// Actions Creaters\r\n\r\nfunction PostsForm(props) {\r\n    let validationSchema = yup.object().shape({\r\n        message: yup\r\n            .string()\r\n            .typeError(\"Невалидный тип данных\")\r\n            .required(\"Данное поле обязательно\"),\r\n    });\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                message: \"\",\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => {\r\n                props.addPost(values.message);\r\n            }}\r\n        >\r\n            {({ errors, touched, values }) => (\r\n                <Form className={cl[\"posts__form\"]}>\r\n                    <Field\r\n                        type=\"text\"\r\n                        placeholder=\"Message\"\r\n                        value={values.message}\r\n                        name=\"message\"\r\n                        className={cl[\"posts__send-input\"]}\r\n                    />\r\n                    {errors.message && touched.message ? (\r\n                        <p className={cl.error}>{errors.message}</p>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    <button type=\"submit\" className={cl[\"posts__send-btn\"]}>\r\n                        Отправить\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nfunction Posts(props) {\r\n    let posts = props.posts.map(post => (\r\n        <Post key={post.id} message={post.message} likecount={post.likecount} />\r\n    ));\r\n\r\n    // UI\r\n\r\n    return (\r\n        <div className={cl[\"posts\"]}>\r\n            <header className={cl[\"posts__header\"]}>\r\n                <h2 className={cl[\"posts__title\"]}>Посты</h2>\r\n            </header>\r\n\r\n            <PostsForm addPost={props.addPost} />\r\n\r\n            <div className={cl[\"posts__items\"]}>{posts}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","import Posts from \"./Posts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Actions Creaters\r\n\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        inputValue: state.profilePage.input,\r\n        posts: state.profilePage.posts,\r\n    };\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(Posts);\r\n\r\nexport default PostsContainer;\r\n","import React from \"react\";\r\nimport cl from \"./Profile.module.css\";\r\nimport ProfileBanner from \"./ProfileBanner/ProfileBanner\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport Loader from \"../common/Loader/Loader\";\r\n\r\nfunction Profile({ profile, status, updateStatus, ...props }) {\r\n    if (!profile) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <section className={cl[\"profile\"]}>\r\n            <ProfileBanner img={profile.photos.large} />\r\n            <ProfileInfo\r\n                img={profile.photos.small}\r\n                name={profile.fullName}\r\n                descr={profile.aboutMe}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n            />\r\n            <PostsContainer />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","export const getStateProfile = state => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getStateStatus = state => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getAuthId = state => {\r\n    return state.auth.id;\r\n}\r\n\r\nexport const getIsAuth = state => {\r\n    return state.auth.isAuth;\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { useParams, Navigate, useNavigate } from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n    getAuthId,\r\n    getIsAuth,\r\n    getStateProfile,\r\n    getStateStatus,\r\n} from \"../../redux/profileSelectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    render() {\r\n        const { id, status, profile, updateStatus } = this.props;\r\n        if (!this.props.id) return <Navigate to=\"/login/\" />;\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                status={status}\r\n                profile={profile}\r\n                updateStatus={updateStatus}\r\n            />\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id, getProfile, getStatus } = this.props;\r\n        getProfile(id);\r\n        getStatus(id);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: getStateProfile(state),\r\n    status: getStateStatus(state),\r\n    authId: getAuthId(state),\r\n    isAuth: getIsAuth(state),\r\n});\r\n\r\nconst ParamsWrapper = props => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n    return (\r\n        <ProfileContainer\r\n            {...props}\r\n            id={\r\n                params.id\r\n                    ? params.id\r\n                    : props.isAuth\r\n                    ? props.authId\r\n                    : navigate(\"/login/\")\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfile,\r\n        getStatus,\r\n        updateStatus,\r\n    }),\r\n)(ParamsWrapper);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = Component => {\r\n    const ContainerComponent = props => {\r\n        if (!props.isAuth) return <Navigate to=\"/login/\" />;\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    return connect(mapStateToProps)(ContainerComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n"],"names":["React","_ref","img","_objectWithoutProperties","_excluded","_jsx","className","cl","children","src","alt","props","editMode","setEditMode","useState","input","setInput","status","useEffect","profile__status","type","onBlur","offEditMode","updateStatus","autoFocus","value","onChange","e","target","onDoubleClick","onEditMode","name","descr","_jsxs","ProfileStatus","message","likecount","PostsForm","validationSchema","yup","shape","typeError","required","Formik","initialValues","onSubmit","values","addPost","errors","touched","Form","Field","placeholder","error","posts","map","post","Post","id","connect","state","inputValue","profilePage","Posts","profile","ProfileBanner","photos","large","ProfileInfo","small","fullName","aboutMe","PostsContainer","Loader","getStateProfile","getStateStatus","getAuthId","auth","getIsAuth","isAuth","ProfileContainer","render","this","Profile","_objectSpread","Navigate","to","componentDidMount","getProfile","getStatus","compose","authId","params","useParams","navigate","useNavigate","mapStateToProps","Component"],"sourceRoot":""}